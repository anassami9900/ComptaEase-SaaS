version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: comptaease-db
    environment:
      POSTGRES_DB: comptaease_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - comptaease-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ASP.NET Core API
  api:
    build:
      context: ./ComptaEase.API
      dockerfile: Dockerfile
    container_name: comptaease-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=db;Database=comptaease_db;Username=postgres;Password=postgres;Port=5432
      - Jwt__Key=your-super-secret-key-that-is-at-least-256-bits-long-for-production
      - Jwt__Issuer=ComptaEase
      - Jwt__Audience=ComptaEase
    ports:
      - "5000:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - comptaease-network
    volumes:
      - ./ComptaEase.API/wwwroot/bulletins:/app/wwwroot/bulletins
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  web:
    build:
      context: ./comptaease-web
      dockerfile: Dockerfile
    container_name: comptaease-web
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
    ports:
      - "3000:80"
    depends_on:
      - api
    networks:
      - comptaease-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: comptaease-nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - web
    networks:
      - comptaease-network

volumes:
  postgres_data:

networks:
  comptaease-network:
    driver: bridge